var documenterSearchIndex = {"docs":
[{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [LagrangianPerturbationTheory]","category":"page"},{"location":"api/#LagrangianPerturbationTheory.CCLCosmology-Union{Tuple{Type{T}}, Tuple{T}} where T","page":"API","title":"LagrangianPerturbationTheory.CCLCosmology","text":"CCLCosmology(T; kwargs...)\n\nReturns a wrapped [pyccl cosmology][1] object with output type T and  cosmological parameters as keyword arguments. For example, a standard Planck 2018 cosmology can be configured with\n\ncclcosmo = CCLCosmology(Float32; \n    Omega_c=0.2589, Omega_b=0.0486, h=0.6774, sigma8=0.8159,\n    n_s=0.9667, transfer_function=\"boltzmann_camb\")\n\n[1]: https://ccl.readthedocs.io/en/latest/api/pyccl.core.html#pyccl.core.Cosmology\n\n\n\n\n\n","category":"method"},{"location":"api/#LagrangianPerturbationTheory.InitialConditionsWebsky-Union{Tuple{TL}, Tuple{AA}, Tuple{C}, Tuple{LPT}, Tuple{T}, Tuple{Type{LPT}, TL, C, AA}} where {T, LPT, C, AA<:(AbstractArray{T}), TL}","page":"API","title":"LagrangianPerturbationTheory.InitialConditionsWebsky","text":"InitialConditionsWebsky(::Type{LPT}, grid_spacing, cosmo, field)\n\nReturns a wrapper around an array field in Lagrangian coordinates, defined by  a kind of Lagrangian perturbation theory LPT, grid spacing, and cosmo. For  Websky, this kind of field is typically something like delta_0(vecq),  the Lagrangian density at z=0.\n\n\n\n\n\n","category":"method"},{"location":"api/#LagrangianPerturbationTheory.InterpolatedCosmology-Union{Tuple{LagrangianPerturbationTheory.AbstractCosmologyBackground{T}}, Tuple{T}} where T","page":"API","title":"LagrangianPerturbationTheory.InterpolatedCosmology","text":"InterpolatedCosmology(cosmo)\n\nGiven a different cosmology object (at the moment, only CCLCosmology),  construct a set of interpolators that provide the quantities needed for LPT.\n\ncclcosmo = CCLCosmology(Float32; \n    Omega_c=0.2589, Omega_b=0.0486, h=0.6774, sigma8=0.8159,\n    n_s=0.9667, transfer_function=\"boltzmann_camb\")\ncosmo = InterpolatedCosmology(cclcosmo)\n\n\n\n\n\n","category":"method"},{"location":"api/#LagrangianPerturbationTheory.growth_factor","page":"API","title":"LagrangianPerturbationTheory.growth_factor","text":"growth_factor(cosmo, a)\n\nReturns the linear growth factor D(a) as a function of cosmo cosmo and scale factor a.\n\n\n\n\n\n","category":"function"},{"location":"api/#LagrangianPerturbationTheory.lattice0-Union{Tuple{T}, Tuple{InitialConditionsWebsky{T}, Vararg{Any, 6}}} where T","page":"API","title":"LagrangianPerturbationTheory.lattice0","text":"lattice0(ic, i, j, k, oi, oj, ok)\n\nReturns the lattice value f_0(vecq) at z=0 for some field f, where i, j, and k are the Lagrangian lattice indices so that  vecq = (q_i q_j q_k), and oi, oj, and ok refer to the octant  index (Websky is repeated twice in each dimension with the observer at the  center, to form eight subvolumes). Octant indices are either -1 or 0.  \n\n\n\n\n\n","category":"method"},{"location":"api/#LagrangianPerturbationTheory.scale_factor_of_chi","page":"API","title":"LagrangianPerturbationTheory.scale_factor_of_chi","text":"scale_factor_of_chi(cosmo, chi)\n\nReturns the scale factor a(chi) as a function of comoving radial distance chi (Mpc).\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = LagrangianPerturbationTheory","category":"page"},{"location":"#LagrangianPerturbationTheory","page":"Home","title":"LagrangianPerturbationTheory","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for LagrangianPerturbationTheory.","category":"page"}]
}
